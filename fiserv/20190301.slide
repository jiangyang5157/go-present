Android Brandable View
with custom styleable attributes
11:07 1 Mar 2019

* Agenda

: Last year, we have realized the constructor on android.content.res.Resources(AssetManager, DisplayMetrics, Configuration) was deprecated in API 25. It left us a risk since our dynamic branding implementation is based on subclassing Resources. We will need to change how we do dynamic branding on Android before the deprecation is brought into effect. 
: We came up with 2 solutions which are either using data binding library or implementing customized attributes for each brandable view. In consideration of a minimum change on each layout/view and other concerns (Payment Plugin), we are planning to use the second approach: Mobiliti styleable views apply both native and customized attributes from XML layout decoration.

- Approach
- Examples of state-less attribute: Text
- Examples of state-full attribute: TextColor, Background
- Drawback

* Approach

Mobiliti brandable views apply both native and customised attributes from XML layout decoration.

- How to read
    Let Android native mechanism do the work.

- How to apply
    We control how FI<*>View is branded from attributes' value.

- Why
    It's not hacky.
    It has minimum code changes required (view / layout / plugin).

* Text

- Native attributes

.code code/text /START_native_attr OMIT/,/STOP_native_attr OMIT/

* Text

.code code/text /START_branding OMIT/,/STOP_branding OMIT/

* Text Color

- Native attributes

.code code/text-color /START_native_attr OMIT/,/STOP_native_attr OMIT/

- Customized attributes

.code code/text-color /START_customized_attr OMIT/,/STOP_customized_attr OMIT/

* ColorStateList

.image image/ColorStateList.png _ 980

    The list of state specs will be processed in order.

* Text Color

.code -edit code/text-color /START_branding OMIT/,/STOP_branding OMIT/

* Background

- Native attributes

.code code/background /START_native_attr OMIT/,/STOP_native_attr OMIT/

- Customized attributes

.code code/background /START_customized_attr OMIT/,/STOP_customized_attr OMIT/

* Background

.code -edit code/background /START_branding OMIT/,/STOP_branding OMIT/

* Shape Drawable

.code code/shape-drawable.xml

* Tint Mode

[[https://developer.android.com/reference/android/graphics/PorterDuff.Mode#enum-values_1][Examples]]

.image image/tintmode-btn.png _ 1024

* Showcase

- Toolbar, Webview

.image image/tint-toolbar-webview.png _ 1024

* Showcase

- Icon, Image, Button

.image image/tint-icon-img-btn.png 455 _

* Tricky

.code code/branding-handler /START_styleable OMIT/,/STOP_styleable OMIT/

.code code/branding-handler /START_obtain_attrs OMIT/,/STOP_obtain_attrs OMIT/

.code -edit code/branding-handler /START_branding OMIT/,/STOP_branding OMIT/

* Drawback

- States are order-senstive and hardcoded in base classes (FI<*>View)

- Impassible to support all states‘ combination
