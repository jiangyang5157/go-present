
// START_native_attr OMIT
android:textColor
android:textColorHint
android:textColorLink
// STOP_native_attr OMIT

// START_customized_attr OMIT
<attr name="textColor_default" format="color" />
<attr name="textColor_disabled" format="color" />
...
// STOP_customized_attr OMIT

// START_branding OMIT
val mTextColor: PriorityQueue<State>

forEach <attr, resId, type> {

    if attr is android.R.attr.textColor:
        if type is ColorInt:
            mTextColor += State(0, int[]{}, repo.color(resId)) // HL

    if attr is R.attr.FI<*>View_textColor_default:
        mTextColor += State(0, int[]{}, repo.color(resId)) // HL

    if attr is R.attr.FI<*>View_textColor_disabled:
        mTextColor += State(100, int[]{-R.attr.state_enable}, repo.color(resId)) // HL
}

textColor = mTextColor.toColorStateList()
// STOP_branding OMIT

