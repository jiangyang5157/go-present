    
// START_styleable OMIT
<declare-styleable name="FI<*>View">
    <attr name="textColor_default" />
    <attr name="textColor_disabled" />
    <attr name="background_tint_default" />
    <attr name="background_tint_disabled" />
</declare-styleable>
// STOP_styleable OMIT

// START_obtain_attrs OMIT
val nativeAttrs = int[]{ android.R.attr.text }
val attrs = concat(nativeAttr, R.styleable.FI<*>View).ascendingSort() // HL
val typedArray = context.theme.obtainStyledAttributes(attrSets, attrs, defStyleAttr, defStyleRes)
// STOP_obtain_attrs OMIT

// START_branding OMIT
forEach <attr, resId, type>: {
    
    // android.R.attr.text: It's the actual native attr ID // HL
    if attr == android.R.attr.text:
        ...
    
    // R.styleable.FI<*>View: It's an array of custom attr IDs // HL
    // R.styleable.FI<*>View_textColor_default: It's the index of the textColor_default attr ID // HL
    if attr == R.styleable.FI<*>View[R.styleable.FI<*>View_textColor_default]: 
        ...
}
// STOP_branding OMIT